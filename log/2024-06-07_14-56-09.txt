/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/utils/weight_norm.py:28: UserWarning: torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.
  warnings.warn("torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.")
bypass_quantizer True
cuda:5
/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/conv.py:306: UserWarning: Plan failed with a cudnnException: CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR: cudnnFinalize Descriptor Failed cudnn_status: CUDNN_STATUS_NOT_SUPPORTED (Triggered internally at ../aten/src/ATen/native/cudnn/Conv_v8.cpp:919.)
  return F.conv1d(input, weight, bias, self.stride,
Traceback (most recent call last):
  File "/DKUdata/tangbl/MambaTransformer/train.py", line 71, in <module>
    main(args)
  File "/DKUdata/tangbl/MambaTransformer/train.py", line 48, in main
    trainer.train()
  File "/DKUdata/tangbl/MambaTransformer/trainer/rmse_trainer.py", line 100, in train
    self._train(self.loss_fn, self.optim, self.tr_data, epoch)
  File "/DKUdata/tangbl/MambaTransformer/trainer/rmse_trainer.py", line 54, in _train
    input_emb = self.model.encode(mix)
  File "/DKUdata/tangbl/MambaTransformer/models/model.py", line 57, in encode
    return self.speech2Token.encode(x)
  File "/DKUdata/tangbl/FunCodec/funcodec/bin/codec_inference.py", line 146, in encode
    ret_dict = self.model.inference_encoding(*batch, need_recon=False, bit_width=None)
  File "/DKUdata/tangbl/FunCodec/funcodec/models/codec_basic.py", line 750, in inference_encoding
    frames = self._encode(speech)
  File "/DKUdata/tangbl/FunCodec/funcodec/models/codec_basic.py", line 361, in _encode
    encoded_frames.append(self._encode_frame(frame))
  File "/DKUdata/tangbl/FunCodec/funcodec/models/codec_basic.py", line 381, in _encode_frame
    emb = self.encoder(x)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/DKUdata/tangbl/FunCodec/funcodec/models/encoder/seanet_encoder.py", line 175, in forward
    outs = self.model(x).permute(0, 2, 1)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/DKUdata/tangbl/FunCodec/funcodec/models/encoder/seanet_encoder.py", line 61, in forward
    return self.shortcut(x) + self.block(x) # This is simply the sum of two tensors of the same size
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/DKUdata/tangbl/FunCodec/funcodec/modules/normed_modules/conv.py", line 259, in forward
    x = self.conv(x)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/DKUdata/tangbl/anaconda/envs/bltang/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/DKUdata/tangbl/FunCodec/funcodec/modules/normed_modules/conv.py", line 159, in forward
    if torch.isnan(torch.sum(x)).any():
KeyboardInterrupt
